Execute command: [
  `which`
  `cmake`
]
[/home/vagrant/labs/lab-08-asio-client]> "which" "cmake"
/usr/bin/cmake
Execute command: [
  `cmake`
  `--version`
]
[/home/vagrant/labs/lab-08-asio-client]> "cmake" "--version"
cmake version 3.10.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
Execute command: [
  `cmake`
  `-H.`
  `-B/home/vagrant/labs/lab-08-asio-client/_builds/sanitize-thread-cxx17-pic-Debug`
  `-DCMAKE_BUILD_TYPE=Debug`
  `-GUnix Makefiles`
  `-DCMAKE_TOOLCHAIN_FILE=/home/vagrant/labs/lab-08-asio-client/tools/polly/sanitize-thread-cxx17-pic.cmake`
  `-DCMAKE_EXE_LINKER=-fuse-ld=gold`
  `-DHUNTER_CONFIGURATION_TYPES=Debug`
]
[/home/vagrant/labs/lab-08-asio-client]> "cmake" "-H." "-B/home/vagrant/labs/lab-08-asio-client/_builds/sanitize-thread-cxx17-pic-Debug" "-DCMAKE_BUILD_TYPE=Debug" "-GUnix Makefiles" "-DCMAKE_TOOLCHAIN_FILE=/home/vagrant/labs/lab-08-asio-client/tools/polly/sanitize-thread-cxx17-pic.cmake" "-DCMAKE_EXE_LINKER=-fuse-ld=gold" "-DHUNTER_CONFIGURATION_TYPES=Debug"
-- [polly] Used toolchain: Clang thread sanitizer / c++17 support / PIC
-- The C compiler identification is Clang 7.0.1
-- The CXX compiler identification is Clang 7.0.1
-- Check for working C compiler: /usr/bin/clang
-- Check for working C compiler: /usr/bin/clang -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/clang++
-- Check for working CXX compiler: /usr/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- [hunter] Calculating Toolchain-SHA1
-- [hunter] Calculating Config-SHA1
-- [hunter] HUNTER_ROOT: /root/.hunter
-- [hunter] [ Hunter-ID: 70287b1 | Toolchain-ID: 4623951 | Config-ID: dffbc08 ]
-- [hunter] GTEST_ROOT: /root/.hunter/_Base/70287b1/4623951/dffbc08/Install (ver.: 1.8.0-hunter-p11)
-- [hunter] Cache HIT: GTest
-- [hunter] Cache info: /root/.hunter/_Base/Cache/meta/4623951/GTest/1.8.0-hunter-p11/76c6aec/0113760/12d12f9/e5fa44f/da39a3e/cache.sha1
-- [hunter] BOOST_ROOT: /root/.hunter/_Base/70287b1/4623951/dffbc08/Install (ver.: 1.68.0-p1)
-- [hunter] Cache HIT: Boost
-- [hunter] Cache info: /root/.hunter/_Base/Cache/meta/4623951/Boost/1.68.0-p1/0bb10b0/da39a3e/12d12f9/eeec021/da39a3e/cache.sha1
-- [hunter] BOOST_ROOT: /root/.hunter/_Base/70287b1/4623951/dffbc08/Install (ver.: 1.68.0-p1)
-- [hunter] Cache HIT: Boost (comp.: log)
-- [hunter] Cache info: /root/.hunter/_Base/Cache/meta/4623951/Boost/__log/1.68.0-p1/0bb10b0/da39a3e/12d12f9/eeec021/da39a3e/cache.sha1
-- [hunter] BOOST_ROOT: /root/.hunter/_Base/70287b1/4623951/dffbc08/Install (ver.: 1.68.0-p1)
-- [hunter] Cache HIT: Boost (comp.: thread)
-- [hunter] Cache info: /root/.hunter/_Base/Cache/meta/4623951/Boost/__thread/1.68.0-p1/0bb10b0/da39a3e/12d12f9/eeec021/da39a3e/cache.sha1
-- [hunter] BOOST_ROOT: /root/.hunter/_Base/70287b1/4623951/dffbc08/Install (ver.: 1.68.0-p1)
-- [hunter] Cache HIT: Boost (comp.: filesystem)
-- [hunter] Cache info: /root/.hunter/_Base/Cache/meta/4623951/Boost/__filesystem/1.68.0-p1/0bb10b0/da39a3e/12d12f9/eeec021/da39a3e/cache.sha1
-- [hunter] BOOST_ROOT: /root/.hunter/_Base/70287b1/4623951/dffbc08/Install (ver.: 1.68.0-p1)
-- [hunter] Cache HIT: Boost (comp.: system)
-- [hunter] Cache info: /root/.hunter/_Base/Cache/meta/4623951/Boost/__system/1.68.0-p1/0bb10b0/da39a3e/12d12f9/eeec021/da39a3e/cache.sha1
-- [hunter] BOOST_ROOT: /root/.hunter/_Base/70287b1/4623951/dffbc08/Install (ver.: 1.68.0-p1)
-- [hunter] Building Boost (component: date_time)
loading initial cache file /root/.hunter/_Base/70287b1/4623951/dffbc08/cache.cmake
loading initial cache file /root/.hunter/_Base/70287b1/4623951/dffbc08/Build/Boost/__date_time/args.cmake
-- [polly] Used toolchain: Clang thread sanitizer / c++17 support / PIC
-- The C compiler identification is Clang 7.0.1
-- The CXX compiler identification is Clang 7.0.1
-- Check for working C compiler: /usr/bin/clang
-- Check for working C compiler: /usr/bin/clang -- works
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/clang++
-- Check for working CXX compiler: /usr/bin/clang++ -- works
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /root/.hunter/_Base/70287b1/4623951/dffbc08/Build/Boost/__date_time/Build
Scanning dependencies of target Boost-date_time
[ 12%] Creating directories for 'Boost-date_time'
[ 25%] Performing download step (download, verify and extract) for 'Boost-date_time'
-- verifying file...
       file='/root/.hunter/_Base/Download/Boost/1.68.0-p1/0bb10b0/v1.68.0-p1.tar.gz'
-- File already exists and hash match (skip download):
  file='/root/.hunter/_Base/Download/Boost/1.68.0-p1/0bb10b0/v1.68.0-p1.tar.gz'
  SHA1='0bb10b0a0fdc196646c87e0143c0290baa32357d'
-- extracting...
     src='/root/.hunter/_Base/Download/Boost/1.68.0-p1/0bb10b0/v1.68.0-p1.tar.gz'
     dst='/root/.hunter/_Base/70287b1/4623951/dffbc08/Build/Boost/__date_time/Source'
-- extracting... [tar xfz]
-- extracting... [analysis]
-- extracting... [rename]
-- extracting... [clean up]
-- extracting... done
[ 37%] No patch step for 'Boost-date_time'
[ 50%] Performing update step for 'Boost-date_time'
[ 62%] Performing configure step for 'Boost-date_time'
Dummy patch command
Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2
Detecting Python version... 2.7
Detecting Python root... /usr
Unicode/ICU support for Boost.Regex?... not found.
Generating Boost.Build configuration in project-config.jam...

Bootstrapping is done. To build, run:

    ./b2

To adjust configuration, edit 'project-config.jam'.
Further information:

   - Command line help:
     ./b2 --help

   - Getting started guide:
     http://www.boost.org/more/getting_started/unix-variants.html

   - Boost.Build documentation:
     http://www.boost.org/build/doc/html/index.html

[ 75%] Performing build step for 'Boost-date_time'
Performing configuration checks

    - default address-model    : 64-bit
    - default architecture     : x86

Building the Boost C++ Libraries.


    - symlinks supported       : yes

Component configuration:

    - atomic                   : not building
    - chrono                   : not building
    - container                : not building
    - context                  : not building
    - contract                 : not building
    - coroutine                : not building
    - date_time                : building
    - exception                : not building
    - fiber                    : not building
    - filesystem               : not building
    - graph                    : not building
    - graph_parallel           : not building
    - iostreams                : not building
    - locale                   : not building
    - log                      : not building
    - math                     : not building
    - mpi                      : not building
    - program_options          : not building
    - python                   : not building
    - random                   : not building
    - regex                    : not building
    - serialization            : not building
    - signals                  : not building
    - stacktrace               : not building
    - system                   : not building
    - test                     : not building
    - thread                   : not building
    - timer                    : not building
    - type_erasure             : not building
    - wave                     : not building

...patience...
...found 989 targets...
...updating 28 targets...
link.mklink boost/chrono/stopwatches.hpp
mklink-or-dir boost/chrono/stopwatches
clang-linux.compile.c++.without-pth bin.v2/libs/date_time/build/clang-linux-7.0.1/debug/link-static/threading-multi/gregorian/greg_weekday.o
clang-linux.compile.c++.without-pth bin.v2/libs/date_time/build/clang-linux-7.0.1/release/link-static/threading-multi/gregorian/greg_weekday.o
clang-linux.compile.c++.without-pth bin.v2/libs/date_time/build/clang-linux-7.0.1/release/link-static/threading-multi/gregorian/date_generators.o
clang-linux.compile.c++.without-pth bin.v2/libs/date_time/build/clang-linux-7.0.1/debug/link-static/threading-multi/gregorian/date_generators.o
clang-linux.compile.c++.without-pth bin.v2/libs/date_time/build/clang-linux-7.0.1/debug/link-static/threading-multi/gregorian/greg_month.o
clang-linux.archive bin.v2/libs/date_time/build/clang-linux-7.0.1/debug/link-static/threading-multi/libboost_date_time-mt-d.a
common.copy stage/lib/libboost_date_time-mt-d.a
clang-linux.compile.c++.without-pth bin.v2/libs/date_time/build/clang-linux-7.0.1/release/link-static/threading-multi/gregorian/greg_month.o
clang-linux.archive bin.v2/libs/date_time/build/clang-linux-7.0.1/release/link-static/threading-multi/libboost_date_time-mt.a
common.copy stage/lib/libboost_date_time-mt.a
...updated 28 targets...


The Boost C++ Libraries were successfully built!

The following directory should be added to compiler include paths:

    /root/.hunter/_Base/70287b1/4623951/dffbc08/Build/Boost/__date_time/Source

The following directory should be added to linker library paths:

    /root/.hunter/_Base/70287b1/4623951/dffbc08/Build/Boost/__date_time/Source/stage/lib

[ 87%] Performing install step for 'Boost-date_time'
Performing configuration checks

    - default address-model    : 64-bit
    - default architecture     : x86
    - symlinks supported       : yes

Component configuration:

    - atomic                   : not building
    - chrono                   : not building
    - container                : not building
    - context                  : not building
    - contract                 : not building
    - coroutine                : not building
    - date_time                : building
    - exception                : not building
    - fiber                    : not building
    - filesystem               : not building
    - graph                    : not building
    - graph_parallel           : not building
    - iostreams                : not building
    - locale                   : not building
    - log                      : not building
    - math                     : not building
    - mpi                      : not building
    - program_options          : not building
    - python                   : not building
    - random                   : not building
    - regex                    : not building
    - serialization            : not building
    - signals                  : not building
    - stacktrace               : not building
    - system                   : not building
    - test                     : not building
    - thread                   : not building
    - timer                    : not building
    - type_erasure             : not building
    - wave                     : not building

[100%] Completed 'Boost-date_time'
[100%] Built target Boost-date_time
-- [hunter] Build step successful (dir: /root/.hunter/_Base/70287b1/4623951/dffbc08/Build/Boost/__date_time)
-- [hunter] Cache saved: /root/.hunter/_Base/Cache/raw/6c4f17549a056aa6974f7b709df9b9fce46cb938.tar.bz2
-- Boost version: 1.68.0
-- Found the following Boost libraries:
--   log
--   thread
--   filesystem
--   system
--   date_time
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - found
-- Found Threads: TRUE
-- Looking for clock_gettime
-- Looking for clock_gettime - found
-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_EXE_LINKER


-- Build files have been written to: /home/vagrant/labs/lab-08-asio-client/_builds/sanitize-thread-cxx17-pic-Debug
Execute command: [
  `cmake`
  `--build`
  `/home/vagrant/labs/lab-08-asio-client/_builds/sanitize-thread-cxx17-pic-Debug`
  `--config`
  `Debug`
  `--`
]
[/home/vagrant/labs/lab-08-asio-client]> "cmake" "--build" "/home/vagrant/labs/lab-08-asio-client/_builds/sanitize-thread-cxx17-pic-Debug" "--config" "Debug" "--"
Scanning dependencies of target client
[ 12%] Building CXX object CMakeFiles/client.dir/sources/main.cpp.o
[ 25%] Building CXX object CMakeFiles/client.dir/sources/client.cpp.o
[ 37%] Linking CXX static library libclientd.a
[ 37%] Built target client
Scanning dependencies of target tests
[ 50%] Building CXX object CMakeFiles/tests.dir/tests/test.cpp.o
[ 62%] Linking CXX executable tests
[ 62%] Built target tests
Scanning dependencies of target main
[ 75%] Building CXX object CMakeFiles/main.dir/sources/main.cpp.o
[ 87%] Building CXX object CMakeFiles/main.dir/sources/client.cpp.o
[100%] Linking CXX executable main
[100%] Built target main
